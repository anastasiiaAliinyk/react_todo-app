{"version":3,"sources":["api/api.js","TodoApp.js","TodoList.js","App.js","index.js"],"names":["request","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","options","response","body","wrap","_context","prev","next","fetch","concat","sent","ok","Error","json","abrupt","data","stop","_x","_x2","apply","this","arguments","getTodos","then","todos","filter","todo","userId","TodoApp","addTodo","_useState","useState","_useState2","slicedToArray","query","setQuery","console","log","react_default","createElement","onSubmit","event","preventDefault","title","completed","method","headers","Content-type","JSON","stringify","type","className","value","placeholder","onChange","target","TodoList","sortedTodosList","items","sort","previous","current","id","map","key","classNames","defaultProp","App","setTodos","useEffect","TodoApp_TodoApp","toConsumableArray","htmlFor","TodoList_TodoList","href","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7da6a1a3.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\nexport const BASE_USERID = 1182;\n\nexport const request = async(url, options) => {\n  const response = await fetch(`${BASE_URL}${url}`, options);\n\n  if (!response.ok) {\n    throw new Error(`Failed to load data ${url}`);\n  }\n\n  const body = await response.json();\n\n  return body.data || body;\n};\n\nexport const getTodos = () => (\n  request('/todos')\n    .then(todos => todos.filter(todo => todo.userId === BASE_USERID))\n);\n\nexport const saveTodo = (todo) => (request('/todos', {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify(todo),\n  // body: JSON.stringify({\n  //   \"userId\": 1182,\n  //   \"title\": \"Completed todo\",\n  //   \"completed\": true,\n  // }),\n  })\n);\n\nexport const saveUser = () => (request('/users', {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify({\n    name: 'Anastasiia',\n    username: 'anastasiia',\n    email: 'al@example.com',\n    phone: 1234567890,\n  }),\n}));\n\n//id: 1182\n","import React, { useState } from 'react';\nimport { saveTodo, BASE_USERID } from './api/api';\n\nexport const TodoApp = ({ addTodo }) => {\n  const [query, setQuery] = useState('');\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n\n    saveTodo({\n      \"userId\": BASE_USERID,\n      \"title\": query,\n      \"completed\": false,\n    })\n    .then(addTodo);\n\n    setQuery('');\n  }\n\n  const onChangeHandler = (event) => {\n    setQuery(event.target.value);\n  }\n\n  console.log(query);\n\n  return (\n      <form onSubmit={onSubmitHandler}>\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          value={query}\n          placeholder=\"What needs to be done?\"\n          onChange={onChangeHandler}\n        />\n      </form>\n    )\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({ items }) => {\nconst sortedTodosList = items.sort((previous, current) => current.id - previous.id);\n\nreturn (\n  <ul className=\"todo-list\">\n    {sortedTodosList.map(todo => (\n      <li\n        key={todo.id}\n        className={classNames(\n          { completed: todo.completed },\n        )}\n      >\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" />\n          <label>{todo.title}</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n    ))}\n\n    {/*\n\n    <li className=\"editing\">\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" />\n        <label>zxcvbnm</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n\n   */}\n  </ul>\n  )\n};\n\nTodoList.defaultProp = {\n  completed: false,\n  title: 'No title',\n};\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool,\n      title: PropTypes.string,\n    }),\n  ).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { TodoApp } from './TodoApp';\nimport { TodoList } from './TodoList';\nimport { getTodos } from './api/api';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  const addTodo = (todo) => {\n    setTodos(todos => [...todos, todo]);\n  }\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <TodoApp addTodo={addTodo} />\n      </header>\n\n      <section className=\"main\">\n        <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        <TodoList items={todos} />\n      </section>\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          3 items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a href=\"#/\" className=\"selected\">All</a>\n          </li>\n\n          <li>\n            <a href=\"#/active\">Active</a>\n          </li>\n\n          <li>\n            <a href=\"#/completed\">Completed</a>\n          </li>\n        </ul>\n\n        <button type=\"button\" className=\"clear-completed\">\n          Clear completed\n        </button>\n      </footer>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}