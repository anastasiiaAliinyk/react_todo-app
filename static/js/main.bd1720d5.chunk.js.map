{"version":3,"sources":["api/api.js","TodoApp.js","TodoItem.js","TodoList.js","Link.js","App.js","index.js"],"names":["request","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","options","response","body","wrap","_context","prev","next","fetch","concat","sent","ok","Error","json","abrupt","data","stop","_x","_x2","apply","this","arguments","getTodos","then","todos","filter","todo","userId","TodoApp","addTodo","_useState","useState","_useState2","slicedToArray","query","setQuery","react_default","createElement","onSubmit","event","preventDefault","title","completed","method","headers","Content-type","JSON","stringify","type","className","value","placeholder","onChange","target","required","TodoItem","deleteItem","onDeleteHandler","todoId","deleteTodo","id","classNames","onClick","TodoList","items","sortedTodosList","sort","previous","current","map","TodoItem_TodoItem","key","defaultProp","Link","selectedFilter","filterBy","text","filterTodos","href","selected","App","setTodos","_useState3","_useState4","notCompletedTodosCount","setCount","_useState5","_useState6","filteredBy","setFilteredBy","useEffect","filterTodosList","useCallback","filteredTodos","useMemo","count","length","toConsumableArray","TodoApp_TodoApp","htmlFor","TodoList_TodoList","Link_Link","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bd1720d5.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\nexport const BASE_USERID = 1182;\n\nexport const request = async(url, options) => {\n  const response = await fetch(`${BASE_URL}${url}`, options);\n\n  if (!response.ok) {\n    throw new Error(`Failed to load data ${url}`);\n  }\n\n  const body = await response.json();\n\n  return body.data || body;\n};\n\nexport const getTodos = () => (\n  request('/todos')\n    .then(todos => todos.filter(todo => todo.userId === BASE_USERID))\n);\n\nexport const saveTodo = todo => request('/todos', {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify(todo),\n  });\n\n// export const updateCompletedStatus = todoId => request(`/todos/${todoId}`, {\n//   method: 'PATCH',\n//   headers: {\n//     'Content-type': 'application/json; charset=UTF-8',\n//   },\n//   body: JSON.stringify(todo),\n//   });\n\nexport const deleteTodo = todoId => request(`/todos/${todoId}`, {method: 'DELETE'});\n\nexport const saveUser = () => (request('/users', {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify({\n    name: 'Anastasiia',\n    username: 'anastasiia',\n    email: 'al@example.com',\n    phone: 1234567890,\n  }),\n}));\n","import React, { useState } from 'react';\nimport { saveTodo, BASE_USERID } from './api/api';\n\nexport const TodoApp = ({ addTodo }) => {\n  const [query, setQuery] = useState('');\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n\n    saveTodo({\n      \"userId\": BASE_USERID,\n      \"title\": query,\n      \"completed\": false,\n    })\n    .then(addTodo);\n\n    setQuery('');\n  }\n\n  const onChangeHandler = (event) => {\n    setQuery(event.target.value);\n  }\n\n  return (\n      <form onSubmit={onSubmitHandler}>\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          value={query}\n          placeholder=\"What needs to be done?\"\n          onChange={onChangeHandler}\n          required\n        />\n      </form>\n    )\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { deleteTodo } from './api/api';\n\nexport const TodoItem = ({ todo, deleteItem }) => {\n  const onDeleteHandler = (todoId) => {\n    deleteTodo(todoId)\n      .then(todo => deleteItem(todo.id));\n  }\n\n  const setCompletedStatus = () => {\n    \n  }\n\n  return (\n    <li\n      className={classNames(\n        { completed: todo.completed },\n      )}\n    >\n    <div className=\"view\">\n      <input type=\"checkbox\" className=\"toggle\" />\n      <label>{todo.title}</label>\n      <button \n        type=\"button\" \n        className=\"destroy\" \n        onClick={() => onDeleteHandler(todo.id)}\n      />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n  )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = ({ items, deleteItem }) => {\n  const sortedTodosList = items.sort((previous, current) => current.id - previous.id);\n\n  return (\n    <ul className=\"todo-list\">\n      {sortedTodosList.map(todo => (\n       <TodoItem \n        key={todo.id}\n        todo={todo} \n        deleteItem={deleteItem} \n      />\n      ))}\n\n      {/*\n\n      <li className=\"editing\">\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" />\n          <label>zxcvbnm</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n\n    */}\n    </ul>\n  )\n};\n\nTodoList.defaultProp = {\n  completed: false,\n  title: 'No title',\n};\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool,\n      title: PropTypes.string,\n    }),\n  ).isRequired,\n  deleteItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nexport const Link = ({ \n  selectedFilter, \n  filterBy, \n  text, \n  filterTodos \n}) => {\n  const url = filterBy === 'all' ? \"#/\" : `#/${filterBy}`;\n\n  return (\n    <a \n      href={url}\n      className={classNames(\n        {selected: filterBy === selectedFilter}\n      )}\n      onClick={() => filterTodos(filterBy)}\n    >\n      {text}\n    </a>\n  )\n}\n","import React, { useCallback, useEffect, useState, useMemo } from 'react';\nimport { TodoApp } from './TodoApp';\nimport { TodoList } from './TodoList';\nimport { getTodos } from './api/api';\nimport { Link } from './Link';\n\nfunction App() {\n  const [todos, setTodos] = useState(null);\n  const [notCompletedTodosCount, setCount] =  useState('');\n  const [filteredBy, setFilteredBy] =  useState('all');\n \n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  const filterTodosList = useCallback ((filterBy) => {\n    switch(filterBy) {\n      case 'completed':\n        return todos.filter(todo => todo.completed);\n      case 'active':\n        return todos.filter(todo => !todo.completed);\n      default:\n        return todos;\n    }\n  }, [todos]);\n \n  const filteredTodos = useMemo(() => {\n    return filterTodosList(filteredBy)\n  }, [filteredBy, filterTodosList])\n\n  useEffect(() => {\n    if (todos === null) {\n      return;\n    }\n\n    const count = todos.filter(todo => !todo.completed).length;\n    setCount(count);\n  }, [todos])\n\n  const addTodo = useCallback((todo) => {\n    setTodos(todos => [...todos, todo]);\n  }, []);\n\n  const deleteTodo = useCallback((todoId) => {\n    setTodos(todos => todos.filter(todo => todo.id !== todoId));\n  }, []);\n\n  if (filteredTodos === null) {\n    return (\n      <div className=\"loading\">Loading...</div>\n    )\n  }\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <TodoApp addTodo={addTodo} />\n      </header>\n\n      <section className=\"main\">\n        <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        <TodoList items={filteredTodos} deleteItem={deleteTodo} />\n      </section>\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {notCompletedTodosCount} items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <Link \n              selectedFilter={filteredBy} \n              filterBy='all' \n              text='All' \n              filterTodos={setFilteredBy}\n            />\n          </li>\n          <li>\n          <Link \n              selectedFilter={filteredBy} \n              filterBy='active' \n              text='Active' \n              filterTodos={setFilteredBy}\n            />\n          </li>\n          <li>\n            <Link \n              selectedFilter={filteredBy} \n              filterBy='completed' \n              text='Completed' \n              filterTodos={setFilteredBy}\n            />\n          </li>\n        </ul>\n\n        <button type=\"button\" className=\"clear-completed\">\n          Clear completed\n        </button>\n      </footer>\n    </section>\n  );\n}\n\nexport default App;\n\n//usememo\n\n/* <a \n    href=\"#/\" \n    className={classNames(\n      {selected: filteredBy === 'all'}\n    )}\n    onClick={() => filterTodosList('all')}\n  >\n    All\n  </a> */\n\n/* <a \n    href=\"#/active\" \n    onClick={() => filterTodosList('active')}\n    className={classNames(\n      {selected: filteredBy === 'active'}\n    )}\n  >\n    Active\n  </a> */\n\n/* <a \n    href=\"#/completed\" \n    onClick={() => filterTodosList('completed')}\n    className={classNames(\n      {selected: filteredBy === 'completed'}\n    )}\n  >\n    Completed\n  </a> */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}