{"version":3,"sources":["api/api.js","TodoApp.js","TodoItem.js","TodoList.js","Link.js","App.js","index.js"],"names":["request","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","options","response","body","wrap","_context","prev","next","fetch","concat","sent","ok","Error","json","abrupt","data","stop","_x","_x2","apply","this","arguments","getTodos","then","todos","filter","todo","userId","deleteTodo","todoId","method","TodoApp","addTodo","_useState","useState","_useState2","slicedToArray","query","setQuery","react_default","createElement","onSubmit","event","preventDefault","title","completed","headers","Content-type","JSON","stringify","type","className","value","placeholder","onChange","target","required","TodoItem","deleteItem","setStatus","checked","setChecked","setStatusCompleted","id","catch","classNames","onClick","console","log","TodoList","items","sortedTodosList","sort","previous","current","map","TodoItem_TodoItem","key","defaultProp","Link","selectedFilter","filterBy","text","filterTodos","href","selected","App","setTodos","_useState3","_useState4","notCompletedTodosCount","setCount","_useState5","_useState6","filteredBy","setFilteredBy","useEffect","filterTodosList","useCallback","filteredTodos","useMemo","count","length","toConsumableArray","deleteTodos","TodoApp_TodoApp","htmlFor","TodoList_TodoList","Link_Link","some","completedItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","completedItem","err","return","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c44a2253.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\nexport const BASE_USERID = 1182;\n\nexport const request = async(url, options) => {\n  const response = await fetch(`${BASE_URL}${url}`, options);\n\n  if (!response.ok) {\n    throw new Error(`Failed to load data ${url}`);\n  }\n\n  const body = await response.json();\n\n  return body.data || body;\n};\n\nexport const getTodos = () => (\n  request('/todos')\n    .then(todos => todos.filter(todo => todo.userId === BASE_USERID))\n);\n\nexport const saveTodo = todo => request('/todos', {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify(todo),\n  });\n\nexport const updateCompletedStatus = (todoId, value) => request(`/todos/${todoId}`, {\n  method: 'PATCH',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify({\n    completed: value,\n  }),\n});\n\nexport const deleteTodo = todoId => request(`/todos/${todoId}`, {method: 'DELETE'});\n\nexport const saveUser = () => (request('/users', {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify({\n    name: 'Anastasiia',\n    username: 'anastasiia',\n    email: 'al@example.com',\n    phone: 1234567890,\n  }),\n}));\n","import React, { useState } from 'react';\nimport { saveTodo, BASE_USERID } from './api/api';\n\nexport const TodoApp = ({ addTodo }) => {\n  const [query, setQuery] = useState('');\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n\n    saveTodo({\n      \"userId\": BASE_USERID,\n      \"title\": query,\n      \"completed\": false,\n    })\n    .then(addTodo);\n\n    setQuery('');\n  }\n\n  const onChangeHandler = (event) => {\n    setQuery(event.target.value);\n  }\n\n  return (\n      <form onSubmit={onSubmitHandler}>\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          value={query}\n          placeholder=\"What needs to be done?\"\n          onChange={onChangeHandler}\n          required\n        />\n      </form>\n    )\n};\n","import React, { useState, useRef } from 'react';\nimport classNames from 'classnames';\n\nimport { deleteTodo, updateCompletedStatus } from './api/api';\n\nexport const TodoItem = ({ todo, deleteItem, setStatus }) => {\n  const [checked, setChecked] = useState(todo.completed);\n\n  //const inputEl = useRef(null);\n\n   const onDeleteHandler = (todoId) => {\n    deleteTodo(todoId)\n      .then(todo => deleteItem(todo.id));\n  }\n\n  const setStatusCompleted = (id, event) => {\n    setChecked(event.target.checked);\n    updateCompletedStatus(id, event.target.checked)\n      .catch(() => {\n        setChecked(!event.target.checked);\n      });\n    setStatus(id, event.target.checked)\n  }\n\n  return (\n    <li\n      className={classNames(\n        //\"editing\",\n        { completed: todo.completed },\n      )}\n      \n    >\n    <div className=\"view\">\n      <input \n        type=\"checkbox\" \n        className=\"toggle\" \n        checked={checked}\n        onChange={(event) => setStatusCompleted(todo.id, event)}\n      />\n      <label>{todo.title}</label>\n      <button \n        type=\"button\" \n        className=\"destroy\" \n        onClick={() => onDeleteHandler(todo.id)}\n      />\n      <button \n        type=\"button\" \n        className=\"editInput\"\n        title=\"Edit title\" \n        onClick={() => console.log('fdsdfsd')}\n      /> \n    </div>\n    <input type=\"text\" className=\"edit\" placeholder=\"fdsfdf\"/>\n  </li>\n  )\n}\n\n// function TextInputWithFocusButton() {\n//   const inputEl = useRef(null);\n//   const onButtonClick = () => {\n//     // `current` указывает на смонтированный элемент `input`\n//     inputEl.current.focus();\n//   };\n//   return (\n//     <>\n//       <input ref={inputEl} type=\"text\" />\n//       <button onClick={onButtonClick}>Установить фокус на поле ввода</button>\n//     </>\n//   );\n// }\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = ({ items, deleteItem, setStatus }) => {\n  const sortedTodosList = items.sort((previous, current) => current.id - previous.id);\n\n  return (\n    <ul className=\"todo-list\">\n      {sortedTodosList.map(todo => (\n       <TodoItem \n        key={todo.id}\n        todo={todo} \n        deleteItem={deleteItem} \n        setStatus={setStatus}\n      />\n      ))}\n\n      {/*\n\n      <li className=\"editing\">\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" />\n          <label>zxcvbnm</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n\n    */}\n    </ul>\n  )\n};\n\nTodoList.defaultProp = {\n  completed: false,\n  title: 'No title',\n};\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool,\n      title: PropTypes.string,\n    }),\n  ).isRequired,\n  deleteItem: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nexport const Link = ({ \n  selectedFilter, \n  filterBy, \n  text, \n  filterTodos \n}) => {\n  const url = filterBy === 'all' ? \"#/\" : `#/${filterBy}`;\n\n  return (\n    <a \n      href={url}\n      className={classNames(\n        {selected: filterBy === selectedFilter}\n      )}\n      onClick={() => filterTodos(filterBy)}\n    >\n      {text}\n    </a>\n  )\n}\n","import React, { useCallback, useEffect, useState, useMemo } from 'react';\nimport { TodoApp } from './TodoApp';\nimport { TodoList } from './TodoList';\nimport { getTodos, deleteTodo } from './api/api';\nimport { Link } from './Link';\n\nfunction App() {\n  const [todos, setTodos] = useState(null);\n  const [notCompletedTodosCount, setCount] =  useState('');\n  const [filteredBy, setFilteredBy] =  useState('all');\n \n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  const filterTodosList = useCallback ((filterBy) => {\n    switch(filterBy) {\n      case 'completed':\n        return todos.filter(todo => todo.completed);\n      case 'active':\n        return todos.filter(todo => !todo.completed);\n      default:\n        return todos;\n    }\n  }, [todos]);\n \n  const filteredTodos = useMemo(() => {\n    return filterTodosList(filteredBy)\n  }, [filteredBy, filterTodosList])\n\n  useEffect(() => {\n    if (todos === null) {\n      return;\n    }\n\n    const count = todos.filter(todo => !todo.completed).length;\n    setCount(count);\n  }, [todos])\n\n  const addTodo = useCallback((todo) => {\n    setTodos(todos => [...todos, todo]);\n  }, []);\n\n  const deleteTodos = useCallback((todoId) => {\n    setTodos(todos => todos.filter(todo => todo.id !== todoId));\n  }, []);\n\n  if (filteredTodos === null) {\n    return (\n      <div className=\"loading\">Loading...</div>\n    )\n  }\n\n  const setStatus = (todoId, completed) => {\n    setTodos(todos => todos.map((todo) => {\n      if (todo.id === todoId) {\n        todo.completed = completed;\n      }\n      return todo;\n    }))\n  }\n\n  const clearCompleted = () => {\n    const completedItems = todos.filter(todo => todo.completed);\n\n    for (const completedItem of completedItems) {\n      deleteTodo(completedItem.id);\n    }\n\n    setTodos(todos => todos.filter(todo => !todo.completed));\n  }\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <TodoApp addTodo={addTodo} />\n      </header>\n\n      <section className=\"main\">\n        <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        <TodoList items={filteredTodos} deleteItem={deleteTodos} setStatus={setStatus}/>\n      </section>\n\n      {todos.length > 0  &&\n       <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {notCompletedTodosCount} items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <Link \n              selectedFilter={filteredBy} \n              filterBy='all' \n              text='All' \n              filterTodos={setFilteredBy}\n            />\n          </li>\n          <li>\n          <Link \n              selectedFilter={filteredBy} \n              filterBy='active' \n              text='Active' \n              filterTodos={setFilteredBy}\n            />\n          </li>\n          <li>\n            <Link \n              selectedFilter={filteredBy} \n              filterBy='completed' \n              text='Completed' \n              filterTodos={setFilteredBy}\n            />\n          </li>\n        </ul>\n\n        {todos.some(todo => todo.completed) && \n          <button \n            type=\"button\" \n            className=\"clear-completed\"\n            onClick={clearCompleted}\n            >\n            Clear completed\n          </button>\n        }\n      </footer>\n    }\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}